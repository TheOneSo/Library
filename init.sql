drop table if exists books;
drop table if exists authors;
drop table if exists genres;

create table authors (
  id bigint generated by default as identity primary key,
  author varchar(255) not null,
  foreign key (id) references books (id_autor) match full on delete cascade
);

create table genres (
  id bigint generated by default as identity primary key,
  genre varchar(255) not null
);

create table books (
  id bigint generated by default as identity primary key,
  book varchar(255) not null,
  id_autor bigint,
  id_genre bigint,
  foreign key (id_autor) references authors (id),
  foreign key (id_genre) references genres (id)
);

insert into authors (id, author) VALUES (1, 'Stephen Edwin King');
insert into authors (id, author) values (2, 'Joanne Rowling');
insert into authors (id, author) values (3, 'Dmitry Alexeevich Glukhovsky');

insert into genres (id, genre) values (1, 'Fantasy');
insert into genres (id, genre) VALUES (2, 'Horrors');
insert into genres (id, genre) values (3, 'Romance');

insert into books (id, book, id_autor, id_genre) values (1, 'Harry Potter and the Philosopher''s Stone', 2, 1);
insert into books (id, book, id_autor, id_genre) values (2, 'Harry Potter and the Chamber of Secrets', 2, 1);
insert into books (id, book, id_autor, id_genre) values (3, 'Metro 2035', 3, 1);
insert into books (id, book, id_autor, id_genre) values (4, 'Metro 2034', 3, 3);
insert into books (id, book, id_autor, id_genre) values (5, 'Under the Dome', 1, 3);
insert into books (id, book, id_autor, id_genre) values (6, 'It', 1, 2);


insert into authors (id, author) values (4, 'Jhon');

insert into books (id, book, id_autor, id_genre) values (16, 'Java', 7, 1);

delete from authors where id = 4;

delete from books where id_autor = 4;

select
  a.author, b.book, g.genre
from books b
       join authors a on b.id_autor = a.id
       join genres g on b.id_genre = g.id;